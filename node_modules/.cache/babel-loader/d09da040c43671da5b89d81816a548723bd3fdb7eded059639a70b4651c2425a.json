{"ast":null,"code":"import axios from \"axios\";\nimport ncryptService from './ncrypt.service';\nimport dayjs from 'dayjs';\nvar userToken = \"\";\nexport default {\n  setToken(token) {\n    localStorage.setItem(\"tkn\", token);\n  },\n  getToken() {\n    let token = localStorage.getItem(\"tkn\");\n    if (token && token != \"undefined\" && token != '') {\n      userToken = token;\n    } else {\n      userToken = null;\n    }\n    return userToken;\n  },\n  isAdmin(user) {\n    let admin = false;\n    let type = 'user';\n    if (user == undefined || user == null || user == '') {\n      return {\n        \"admin\": admin,\n        \"type\": type\n      };\n    }\n    if (user.role == undefined || user.role == null || user.role == '') {\n      return {\n        \"admin\": admin,\n        \"type\": type\n      };\n    }\n    if (user.role != 'admin' && user.role != 'legrafica') {\n      return {\n        \"admin\": admin,\n        \"type\": type\n      };\n    }\n\n    //si es admin.\n    admin = true;\n    type = user.role;\n    return {\n      \"admin\": admin,\n      \"type\": type\n    };\n  },\n  isTch(user) {\n    let tch = false;\n    let type = 'user';\n    if (user == undefined || user == null || user == '') {\n      return {\n        \"tch\": tch,\n        \"type\": type\n      };\n    }\n    if (user.role == undefined || user.role == null || user.role == '') {\n      return {\n        \"tch\": tch,\n        \"type\": type\n      };\n    }\n    if (user.role != 'colaborador') {\n      return {\n        \"tch\": tch,\n        \"type\": type\n      };\n    }\n\n    //si es tch.\n    tch = true;\n    type = user.role;\n    return {\n      \"tch\": tch,\n      \"type\": type\n    };\n  },\n  async tokenexp() {\n    let exp = false;\n    let response = await this.getData();\n    if (response.status == 'error') {\n      return true;\n    }\n    let identity = response.result;\n    let identity_exp = identity.exp; // fecha de expiración\n    let date = dayjs().format(); // fecha actual\n    date < identity_exp ? exp : exp = true;\n    return exp;\n  },\n  async getData() {\n    try {\n      let token = this.getToken();\n      if (token == null) {\n        return {\n          status: 'error',\n          message: 'Sesión no valida',\n          result: ''\n        };\n      }\n      const _pk = ncryptService._createPubToken();\n      const headers = {\n        'Authorization': token,\n        \"_pk\": _pk\n      };\n      let response = await axios.post(`/info_usr`, {\n        \"data\": token\n      }, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      return {\n        status: 'error',\n        message: 'Error al intentar obtener la sesión.',\n        result: ''\n      };\n    }\n  },\n  async createAuth() {\n    try {\n      let token = this.getToken();\n      if (token == null) {\n        return {\n          status: 'error',\n          message: 'Sesión no valida',\n          result: ''\n        };\n      }\n      const _pk = ncryptService._createPubToken();\n      const headers = {\n        'Authorization': token,\n        \"_pk\": _pk\n      };\n      let response = await axios.post(`/create-auth`, {\n        \"data\": token\n      }, {\n        headers\n      });\n      return {\n        status: 'success',\n        result: response.data.result\n      };\n    } catch (error) {\n      return {\n        status: 'error',\n        result: ''\n      };\n    }\n  },\n  setAth(ath) {\n    localStorage.setItem(\"ath\", ath);\n  },\n  async getAth() {\n    let ath = localStorage.getItem(\"ath\");\n    let valid = false;\n    if (ath && ath != \"undefined\") {\n      try {\n        let token = this.getToken();\n        if (token == null) {\n          return {\n            status: 'error',\n            message: 'Sesión no valida',\n            result: ''\n          };\n        }\n        const _pk = ncryptService._createPubToken();\n        const headers = {\n          'Authorization': token,\n          \"_pk\": _pk\n        };\n        let response = await axios.post(`/get-auth`, {\n          \"token\": ath\n        }, {\n          headers\n        });\n        response.data.status == 'success' ? valid = true : valid = false;\n      } catch (error) {\n        valid = false;\n      }\n    } else {\n      valid = false;\n    }\n    return valid;\n  }\n};","map":{"version":3,"names":["axios","ncryptService","dayjs","userToken","setToken","token","localStorage","setItem","getToken","getItem","isAdmin","user","admin","type","undefined","role","isTch","tch","tokenexp","exp","response","getData","status","identity","result","identity_exp","date","format","message","_pk","_createPubToken","headers","post","data","error","createAuth","setAth","ath","getAth","valid"],"sources":["C:/Users/Dell Latitude/Documents/GitHub/sushilito_ft/src/services/user.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport ncryptService from './ncrypt.service'\r\nimport dayjs from 'dayjs';\r\n\r\n\r\n\r\nvar userToken=\"\";\r\nexport default {\r\n  \r\n  \r\n  setToken(token) {\r\n    localStorage.setItem(\"tkn\", token);\r\n  },\r\n\r\n  getToken() {\r\n    let token = localStorage.getItem(\"tkn\");\r\n\r\n    if (token && token != \"undefined\" && token != '') {\r\n      userToken = token;\r\n    } else {\r\n      userToken = null;\r\n    }\r\n\r\n    return userToken;\r\n  },\r\n\r\n\r\n  isAdmin(user){\r\n    let admin = false;\r\n    let type = 'user'\r\n\r\n    if(user == undefined || user == null || user == ''){\r\n      return {\"admin\":admin, \"type\":type}\r\n    }\r\n\r\n    if(user.role == undefined || user.role == null || user.role ==''){\r\n      return {\"admin\":admin, \"type\":type}\r\n    }\r\n\r\n    if(user.role != 'admin' && user.role != 'legrafica' ){\r\n      return {\"admin\":admin, \"type\":type}\r\n    }\r\n\r\n    //si es admin.\r\n    admin = true\r\n    type = user.role\r\n\r\n     return {\"admin\":admin, \"type\":type}\r\n\r\n\r\n  },\r\n\r\n \r\n\r\n\r\n\r\n  isTch(user){\r\n    let tch = false;\r\n    let type = 'user'\r\n\r\n    if(user == undefined || user == null || user == ''){\r\n      return {\"tch\":tch, \"type\":type}\r\n    }\r\n\r\n    if(user.role == undefined || user.role == null || user.role ==''){\r\n      return {\"tch\":tch, \"type\":type}\r\n    }\r\n\r\n    if(user.role != 'colaborador' ){\r\n      return {\"tch\":tch, \"type\":type}\r\n    }\r\n\r\n    //si es tch.\r\n    tch = true\r\n    type = user.role\r\n\r\n     return {\"tch\":tch, \"type\":type}\r\n\r\n\r\n  },\r\n\r\n\r\n\r\n  async tokenexp(){  \r\n    let exp = false;\r\n\r\n\r\n    \r\n   let response = await this.getData()\r\n\r\n   if(response.status =='error'){\r\n     return true\r\n   }\r\n    \r\n   let identity = response.result;\r\n\r\n   let identity_exp = identity.exp; // fecha de expiración\r\n   let date = dayjs().format(); // fecha actual\r\n   date < identity_exp? exp : exp = true; \r\n\r\n   \r\n    return exp;\r\n  },\r\n\r\n\r\n  \r\n\r\n  async getData(){ \r\n \r\n\r\n    try {              \r\n      \r\n\r\n      let token = this.getToken()\r\n\r\n      if(token==null){\r\n          return {\r\n              status:'error',\r\n              message:'Sesión no valida',\r\n              result:''\r\n          }\r\n      }\r\n\r\n\r\n      const _pk = ncryptService._createPubToken()\r\n      const headers =  {'Authorization': token, \"_pk\":_pk} ;\r\n    \r\n      let response = await axios.post(`/info_usr`, {\"data\":token}, {headers});\r\n    \r\n      \r\n      return response.data;\r\n\r\n      } catch (error) {\r\n          return {\r\n            status:'error',\r\n            message:'Error al intentar obtener la sesión.',\r\n            result:''\r\n        }\r\n      }\r\n\r\n} ,\r\n\r\n\r\nasync createAuth(){\r\n\r\n       try{\r\n        let token = this.getToken()\r\n\r\n        if(token==null){\r\n            return {\r\n                status:'error',\r\n                message:'Sesión no valida',\r\n                result:''\r\n            }\r\n        }\r\n        const _pk = ncryptService._createPubToken()\r\n         const headers =  {'Authorization': token, \"_pk\":_pk} ;\r\n      \r\n        let response = await axios.post(`/create-auth`, {\"data\":token}, {headers});\r\n      \r\n        \r\n        return {\r\n          status:'success',\r\n          result:response.data.result\r\n        };\r\n       }catch (error) {\r\n          return {\r\n            status:'error',\r\n            result:''\r\n          }\r\n       }\r\n      \r\n    },\r\n\r\n    setAth(ath) {\r\n    localStorage.setItem(\"ath\", ath);\r\n    }, \r\n\r\n    async   getAth() {\r\n    let ath = localStorage.getItem(\"ath\");\r\n\r\n    let valid = false;\r\n\r\n    if (ath  && ath  != \"undefined\") {\r\n      try{\r\n        let token = this.getToken()\r\n\r\n        if(token==null){\r\n            return {\r\n                status:'error',\r\n                message:'Sesión no valida',\r\n                result:''\r\n            }\r\n        }\r\n        const _pk = ncryptService._createPubToken()\r\n        const headers =  {'Authorization': token, \"_pk\":_pk} ;\r\n        \r\n        let response = await axios.post(`/get-auth`, {\"token\":ath }, {headers});\r\n      \r\n        response.data.status == 'success' ? valid=true :   valid= false\r\n\r\n       \r\n      }catch (error){\r\n        valid= false;\r\n      }\r\n\r\n\r\n    } else {\r\n      valid= false;\r\n    }\r\n\r\n       return valid;\r\n    },\r\n\r\n\r\n\r\n\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAIzB,IAAIC,SAAS,GAAC,EAAE;AAChB,eAAe;EAGbC,QAAQA,CAACC,KAAK,EAAE;IACdC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAC;EACpC,CAAC;EAEDG,QAAQA,CAAA,EAAG;IACT,IAAIH,KAAK,GAAGC,YAAY,CAACG,OAAO,CAAC,KAAK,CAAC;IAEvC,IAAIJ,KAAK,IAAIA,KAAK,IAAI,WAAW,IAAIA,KAAK,IAAI,EAAE,EAAE;MAChDF,SAAS,GAAGE,KAAK;IACnB,CAAC,MAAM;MACLF,SAAS,GAAG,IAAI;IAClB;IAEA,OAAOA,SAAS;EAClB,CAAC;EAGDO,OAAOA,CAACC,IAAI,EAAC;IACX,IAAIC,KAAK,GAAG,KAAK;IACjB,IAAIC,IAAI,GAAG,MAAM;IAEjB,IAAGF,IAAI,IAAIG,SAAS,IAAIH,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,EAAC;MACjD,OAAO;QAAC,OAAO,EAACC,KAAK;QAAE,MAAM,EAACC;MAAI,CAAC;IACrC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAID,SAAS,IAAIH,IAAI,CAACI,IAAI,IAAI,IAAI,IAAIJ,IAAI,CAACI,IAAI,IAAG,EAAE,EAAC;MAC/D,OAAO;QAAC,OAAO,EAACH,KAAK;QAAE,MAAM,EAACC;MAAI,CAAC;IACrC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAI,OAAO,IAAIJ,IAAI,CAACI,IAAI,IAAI,WAAW,EAAE;MACnD,OAAO;QAAC,OAAO,EAACH,KAAK;QAAE,MAAM,EAACC;MAAI,CAAC;IACrC;;IAEA;IACAD,KAAK,GAAG,IAAI;IACZC,IAAI,GAAGF,IAAI,CAACI,IAAI;IAEf,OAAO;MAAC,OAAO,EAACH,KAAK;MAAE,MAAM,EAACC;IAAI,CAAC;EAGtC,CAAC;EAMDG,KAAKA,CAACL,IAAI,EAAC;IACT,IAAIM,GAAG,GAAG,KAAK;IACf,IAAIJ,IAAI,GAAG,MAAM;IAEjB,IAAGF,IAAI,IAAIG,SAAS,IAAIH,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,EAAC;MACjD,OAAO;QAAC,KAAK,EAACM,GAAG;QAAE,MAAM,EAACJ;MAAI,CAAC;IACjC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAID,SAAS,IAAIH,IAAI,CAACI,IAAI,IAAI,IAAI,IAAIJ,IAAI,CAACI,IAAI,IAAG,EAAE,EAAC;MAC/D,OAAO;QAAC,KAAK,EAACE,GAAG;QAAE,MAAM,EAACJ;MAAI,CAAC;IACjC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAI,aAAa,EAAE;MAC7B,OAAO;QAAC,KAAK,EAACE,GAAG;QAAE,MAAM,EAACJ;MAAI,CAAC;IACjC;;IAEA;IACAI,GAAG,GAAG,IAAI;IACVJ,IAAI,GAAGF,IAAI,CAACI,IAAI;IAEf,OAAO;MAAC,KAAK,EAACE,GAAG;MAAE,MAAM,EAACJ;IAAI,CAAC;EAGlC,CAAC;EAID,MAAMK,QAAQA,CAAA,EAAE;IACd,IAAIC,GAAG,GAAG,KAAK;IAIhB,IAAIC,QAAQ,GAAG,MAAM,IAAI,CAACC,OAAO,EAAE;IAEnC,IAAGD,QAAQ,CAACE,MAAM,IAAG,OAAO,EAAC;MAC3B,OAAO,IAAI;IACb;IAEA,IAAIC,QAAQ,GAAGH,QAAQ,CAACI,MAAM;IAE9B,IAAIC,YAAY,GAAGF,QAAQ,CAACJ,GAAG,CAAC,CAAC;IACjC,IAAIO,IAAI,GAAGxB,KAAK,EAAE,CAACyB,MAAM,EAAE,CAAC,CAAC;IAC7BD,IAAI,GAAGD,YAAY,GAAEN,GAAG,GAAGA,GAAG,GAAG,IAAI;IAGpC,OAAOA,GAAG;EACZ,CAAC;EAKD,MAAME,OAAOA,CAAA,EAAE;IAGb,IAAI;MAGF,IAAIhB,KAAK,GAAG,IAAI,CAACG,QAAQ,EAAE;MAE3B,IAAGH,KAAK,IAAE,IAAI,EAAC;QACX,OAAO;UACHiB,MAAM,EAAC,OAAO;UACdM,OAAO,EAAC,kBAAkB;UAC1BJ,MAAM,EAAC;QACX,CAAC;MACL;MAGA,MAAMK,GAAG,GAAG5B,aAAa,CAAC6B,eAAe,EAAE;MAC3C,MAAMC,OAAO,GAAI;QAAC,eAAe,EAAE1B,KAAK;QAAE,KAAK,EAACwB;MAAG,CAAC;MAEpD,IAAIT,QAAQ,GAAG,MAAMpB,KAAK,CAACgC,IAAI,CAAE,WAAU,EAAE;QAAC,MAAM,EAAC3B;MAAK,CAAC,EAAE;QAAC0B;MAAO,CAAC,CAAC;MAGvE,OAAOX,QAAQ,CAACa,IAAI;IAEpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO;QACLZ,MAAM,EAAC,OAAO;QACdM,OAAO,EAAC,sCAAsC;QAC9CJ,MAAM,EAAC;MACX,CAAC;IACH;EAEN,CAAC;EAGD,MAAMW,UAAUA,CAAA,EAAE;IAEX,IAAG;MACF,IAAI9B,KAAK,GAAG,IAAI,CAACG,QAAQ,EAAE;MAE3B,IAAGH,KAAK,IAAE,IAAI,EAAC;QACX,OAAO;UACHiB,MAAM,EAAC,OAAO;UACdM,OAAO,EAAC,kBAAkB;UAC1BJ,MAAM,EAAC;QACX,CAAC;MACL;MACA,MAAMK,GAAG,GAAG5B,aAAa,CAAC6B,eAAe,EAAE;MAC1C,MAAMC,OAAO,GAAI;QAAC,eAAe,EAAE1B,KAAK;QAAE,KAAK,EAACwB;MAAG,CAAC;MAErD,IAAIT,QAAQ,GAAG,MAAMpB,KAAK,CAACgC,IAAI,CAAE,cAAa,EAAE;QAAC,MAAM,EAAC3B;MAAK,CAAC,EAAE;QAAC0B;MAAO,CAAC,CAAC;MAG1E,OAAO;QACLT,MAAM,EAAC,SAAS;QAChBE,MAAM,EAACJ,QAAQ,CAACa,IAAI,CAACT;MACvB,CAAC;IACF,CAAC,QAAOU,KAAK,EAAE;MACZ,OAAO;QACLZ,MAAM,EAAC,OAAO;QACdE,MAAM,EAAC;MACT,CAAC;IACJ;EAEH,CAAC;EAEDY,MAAMA,CAACC,GAAG,EAAE;IACZ/B,YAAY,CAACC,OAAO,CAAC,KAAK,EAAE8B,GAAG,CAAC;EAChC,CAAC;EAED,MAAQC,MAAMA,CAAA,EAAG;IACjB,IAAID,GAAG,GAAG/B,YAAY,CAACG,OAAO,CAAC,KAAK,CAAC;IAErC,IAAI8B,KAAK,GAAG,KAAK;IAEjB,IAAIF,GAAG,IAAKA,GAAG,IAAK,WAAW,EAAE;MAC/B,IAAG;QACD,IAAIhC,KAAK,GAAG,IAAI,CAACG,QAAQ,EAAE;QAE3B,IAAGH,KAAK,IAAE,IAAI,EAAC;UACX,OAAO;YACHiB,MAAM,EAAC,OAAO;YACdM,OAAO,EAAC,kBAAkB;YAC1BJ,MAAM,EAAC;UACX,CAAC;QACL;QACA,MAAMK,GAAG,GAAG5B,aAAa,CAAC6B,eAAe,EAAE;QAC3C,MAAMC,OAAO,GAAI;UAAC,eAAe,EAAE1B,KAAK;UAAE,KAAK,EAACwB;QAAG,CAAC;QAEpD,IAAIT,QAAQ,GAAG,MAAMpB,KAAK,CAACgC,IAAI,CAAE,WAAU,EAAE;UAAC,OAAO,EAACK;QAAI,CAAC,EAAE;UAACN;QAAO,CAAC,CAAC;QAEvEX,QAAQ,CAACa,IAAI,CAACX,MAAM,IAAI,SAAS,GAAGiB,KAAK,GAAC,IAAI,GAAKA,KAAK,GAAE,KAAK;MAGjE,CAAC,QAAOL,KAAK,EAAC;QACZK,KAAK,GAAE,KAAK;MACd;IAGF,CAAC,MAAM;MACLA,KAAK,GAAE,KAAK;IACd;IAEG,OAAOA,KAAK;EACf;AAKJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}